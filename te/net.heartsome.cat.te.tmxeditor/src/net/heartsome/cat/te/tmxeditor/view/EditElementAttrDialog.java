package net.heartsome.cat.te.tmxeditor.view;import java.text.ParsePosition;import java.text.SimpleDateFormat;import java.util.Calendar;import java.util.Date;import net.heartsome.cat.te.tmxeditor.resource.Messages;import net.heartsome.cat.te.tmxeditor.view.PropertiesView.AttrCollector;import org.eclipse.jface.dialogs.Dialog;import org.eclipse.jface.layout.GridDataFactory;import org.eclipse.jface.layout.GridLayoutFactory;import org.eclipse.swt.SWT;import org.eclipse.swt.events.ModifyEvent;import org.eclipse.swt.events.ModifyListener;import org.eclipse.swt.layout.GridData;import org.eclipse.swt.layout.GridLayout;import org.eclipse.swt.widgets.Button;import org.eclipse.swt.widgets.Composite;import org.eclipse.swt.widgets.Control;import org.eclipse.swt.widgets.DateTime;import org.eclipse.swt.widgets.Group;import org.eclipse.swt.widgets.Label;import org.eclipse.swt.widgets.Shell;import org.eclipse.swt.widgets.Text;/** * 自定义属性添加或修改对话框 * @author Austen 2013-06-18 */public class EditElementAttrDialog extends Dialog {	private Text valueTxt;	private DateTime dateWidget;	private DateTime timeWidget;	private Text nameTxt;	private AttrCollector attrCollector;	private String oldName;	private String oldValue;	private Button allFileOrDBBtn;	private Button curSelectRowBtn;	private Button allFilterResultBtn;	private int category;	public EditElementAttrDialog(Shell parentShell, int category, AttrCollector attrCollector) {		super(parentShell);		this.attrCollector = attrCollector;		this.oldName = attrCollector.name;		this.oldValue = attrCollector.value;		this.category = category;	}	@Override	protected void configureShell(Shell newShell) {		super.configureShell(newShell);		String title = "";		switch (category) {		case PropertiesView.TU_ATTRS:			title = Messages.getString("tmxeditor.editElementAttrDialog.title");			break;		case PropertiesView.TUV_ATTRS:			title = Messages.getString("tmxeditor.editElementAttrDialog.addFixAttr.title");			break;		case PropertiesView.TU_NODE_NOTE:			title = Messages.getString("tmxeditor.editElementDialog.title");			break;		case PropertiesView.TU_NODE_PROPS:			title = Messages.getString("tmxeditor.editElementDialog.addFixAttr.title");			break;		}		newShell.setText(title);	}	@Override	protected Control createDialogArea(Composite parent) {		Composite tParent = (Composite) super.createDialogArea(parent);		tParent.setLayout(new GridLayout(2, false));		GridData parentData = new GridData(SWT.FILL, SWT.FILL, true, true);		parentData.widthHint = 500;		tParent.setLayoutData(parentData);		GridData gd = GridDataFactory.swtDefaults().align(SWT.FILL, SWT.CENTER).grab(true, false).create();		// 自定义属性名称		Label nameLbl = new Label(tParent, SWT.NONE);		nameLbl.setText(Messages.getString("tmxeditor.editElementAttrDialog.customAttrName"));		nameTxt = new Text(tParent, SWT.BORDER | SWT.READ_ONLY);		nameTxt.setText(oldName);		GridDataFactory.createFrom(gd).applyTo(nameTxt);		// 自定义属性值		Label valueLbl = new Label(tParent, SWT.NONE);		valueLbl.setText(Messages.getString("tmxeditor.editElementAttrDialog.customAttrValue"));		if (oldName.equalsIgnoreCase("creationdate") || oldName.equalsIgnoreCase("changedate")) {			Composite com = new Composite(tParent, SWT.NONE);			GridLayout gl = new GridLayout(2, false);			gl.marginLeft = 0;			gl.marginWidth = 0;			gl.marginHeight = 0;			gl.marginBottom = 0;			com.setLayout(gl);			dateWidget = new DateTime(com, SWT.DROP_DOWN);			timeWidget = new DateTime(com, SWT.DROP_DOWN | SWT.TIME | SWT.LONG);			GridDataFactory.createFrom(gd).applyTo(com);			Date strtodate = new Date();			if (oldValue != null) {				SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd,HH:mm");				ParsePosition pos = new ParsePosition(0);				strtodate = formatter.parse(oldValue, pos);				if (strtodate == null) {					strtodate = new Date();				}			}			Calendar cl = Calendar.getInstance();			cl.setTime(strtodate);			dateWidget.setDate(cl.get(Calendar.YEAR), cl.get(Calendar.MONTH), cl.get(Calendar.DATE));			timeWidget.setTime(cl.get(Calendar.HOUR_OF_DAY), cl.get(Calendar.MINUTE), cl.get(Calendar.SECOND));		} else {			valueTxt = new Text(tParent, SWT.BORDER);			valueTxt.setText(oldValue);			valueTxt.setFocus();			valueTxt.addModifyListener(new ModifyListener() {				@Override				public void modifyText(ModifyEvent e) {					getButton(Dialog.OK).setEnabled(!valueTxt.getText().isEmpty());				}			});			GridDataFactory.createFrom(gd).applyTo(valueTxt);		}		// 作用组		Group applyGroup = new Group(tParent, SWT.NONE);		applyGroup.setText(Messages.getString("tmxeditor.editElementAttrDialog.apply"));		GridDataFactory.swtDefaults().align(SWT.FILL, SWT.CENTER).span(2, 1).applyTo(applyGroup);		GridLayoutFactory.swtDefaults().numColumns(3).applyTo(applyGroup);		// 当前选中行		curSelectRowBtn = new Button(applyGroup, SWT.RADIO);		curSelectRowBtn.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));		curSelectRowBtn.setText(Messages.getString("tmxeditor.editElementAttrDialog.current.line"));		curSelectRowBtn.setSelection(true);		// 所有过滤结果		allFilterResultBtn = new Button(applyGroup, SWT.RADIO);		allFilterResultBtn.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));		allFilterResultBtn.setText(Messages.getString("tmxeditor.editElementAttrDialog.allFilterResults"));		// 整个文件/记忆库		allFileOrDBBtn = new Button(applyGroup, SWT.RADIO);		allFileOrDBBtn.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));		allFileOrDBBtn.setText(Messages.getString("tmxeditor.editElementAttrDialog.allFileDatabase"));		return tParent;	}	@Override	protected void okPressed() {		String newValue = "";		if (oldName.equalsIgnoreCase("creationdate") || oldName.equalsIgnoreCase("changedate")) {			int month = dateWidget.getMonth() + 1;			int day = dateWidget.getDay();			int hours = timeWidget.getHours();			int minutes = timeWidget.getMinutes();			int seconds = timeWidget.getSeconds();			newValue = "" + dateWidget.getYear() + (month < 10 ? "0" + month : month) + (day < 10 ? "0" + day : day)					+ "T" + (hours < 10 ? "0" + hours : hours) + (minutes < 10 ? "0" + minutes : minutes)					+ (seconds < 10 ? "0" + seconds : seconds) + "Z";		} else {			newValue = valueTxt.getText();		}		if (newValue.equals(oldValue) && curSelectRowBtn.getSelection()) {			cancelPressed();		} else {			if (curSelectRowBtn.getSelection()) {				attrCollector.scope = PropertiesView.SELECTED_TU;			} else if (allFilterResultBtn.getSelection()) {				attrCollector.scope = PropertiesView.FILTERED_TU;			} else {				attrCollector.scope = PropertiesView.ALL_TU;			}			attrCollector.value = newValue;		}		super.okPressed();	}	@Override	protected void createButtonsForButtonBar(Composite parent) {		super.createButtonsForButtonBar(parent);	}}